generator client {
  provider = "prisma-client-js"
  output   = "generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id            String    @id
  name          String
  email         String
  emailVerified Boolean   @default(false)
  role          Role      @default(USER)
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now()) @updatedAt
  sessions      Session[]
  accounts      Account[]

  votes Vote[]

  @@unique([email])
  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  @@map("account")
}

model Verification {
  id         String   @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt

  @@map("verification")
}

model Election {
  id          String   @id @default(cuid())
  title       String
  description String?
  startAt     DateTime
  endAt       DateTime
  createdAt   DateTime @default(now())

  candidates Candidate[]
  votes      Vote[]
}

model Candidate {
  id         String   @id @default(cuid())
  name       String
  visi       String?
  misi       String?
  photo      String?
  instagram  String?
  electionId String
  election   Election @relation(fields: [electionId], references: [id])

  votes Vote[]
}

model Vote {
  id          String   @id @default(cuid())
  userId      String
  candidateId String
  electionId  String
  createdAt   DateTime @default(now())

  user      User      @relation(fields: [userId], references: [id])
  candidate Candidate @relation(fields: [candidateId], references: [id])
  election  Election  @relation(fields: [electionId], references: [id])

  @@unique([userId, electionId]) // satu user hanya bisa vote 1x per event
}
